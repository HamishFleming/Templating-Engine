import * as ejs from 'ejs';


/**
 * Renders a template file with the given data
 * @param content
 * @param data
 * @returns {string}
 */
export function render(content: string, data: any) {
	// add header
	content = getHeaderComment(content, data) + content;
	return ejs.render(content, data);
}

/**
 * Defines the data to be used when rendering a template
 * @param projectName
 * @param templateName
 * @param templatePath
 * @param tartgetPath
 * @returns {TemplateData}
 */
export function getTemplateData(projectName: string, templateName: string, templatePath: string, tartgetPath: string) {
	return {
		projectName,
		templateName,
		templatePath,
		tartgetPath
	};
}

/**
 * Get the value for a header comment for the given file
 * @param file
 * @param data
 * @returns {string}
 */
export function getHeaderComment(file: string, data: any) {
	file = 'src/utils/template.ts'
	file = file.replace(/\\/g, '/');
	const header = `/**
 * This file was generated by the ${data.templateName ?? 'unknown'} template
 * @see
 * @see this
 * @a` + `uthor ${data.projectName ?? 'unknown'}
 * @since 1.0.0
 * @version 1.0.0
 * @file ${file}
 * @generated ${new Date().toISOString()}
 * @license MIT
 * @todo add more todos
 */
	`;
	return header;
}

/**
 * Replaces the fields in a template file with the given data
 * @param content
 * @param data
 * @returns {string}
 */
export function replaceFields(content: string, data: any): string {
	// add header
	content = getHeaderComment(content, data) + content;
	// replace fields
	const replacedContent = content.replace(/<%=\s*.\s*%>/g, (match: string) => {
		const field = match.replace(/<%=\s*|\s*%>/g, '');
		return data[field];
	});
	return replacedContent;
}
